.\" Automatically generated by Pandoc 2.6
.\"
.TH "Collins Golang CLI" "" "February 12, 2019" "" ""
.hy
.SH Synopsis
.PP
\f[C]collins query\f[R] options [hostname]\&...
.SH Description
.PP
Collins query provides a wrapper round the collins find endpoint.
Most input is just taken from passed in flags and converted into a
collins query using CQL.
Multiple output formats are supported such as Table, YAML, JSON, and
Links.
Table which is the default output format can be used to pipe the output
into other commands such as set, power, and provision.
.SS Query Examples
.PP
A basic example to query a specific tag and additionally tell us the ip
of the asset would be:
.IP
.nf
\f[C]
collins query -t M000001 -x ip_address
\f[R]
.fi
.SH Options
.SS Query options
.TP
.B \f[C]-t\f[R] \f[I]VALUES\f[R], \f[C]--tag\f[R] \f[I]VALUES\f[R]
Specify tag names to return they must be the full tag and in the case
that multiple are specified they must be separated by commas.
.TP
.B \f[C]-Z\f[R], \f[C]--remote-lookup\f[R]
Remote lookup will utilize collins remote lookup feature to query not
only the current collins instances but other instances it has been
linked with as well.
.TP
.B \f[C]-T\f[R] \f[I]VALUES\f[R], \f[C]--type\f[R] \f[I]VALUES\f[R]
Specify the type of asset that should be returned.
Common uses for this might be for selecting all power switches or server
nodes.
When multiple values are specified they must be separated by commas.
.RS
.IP
.nf
\f[C]
-T SERVER_NODE
--type POWER_SWITCH,SERVER_NODE
\f[R]
.fi
.RE
.TP
.B \f[C]-n\f[R] \f[I]VALUES\f[R], \f[C]--nodeclass\f[R] \f[I]VALUES\f[R]
Specify the nodeclass to query.
When multiple values are specified they must be separated by commas.
By default this does a wildcard match at the start and end of the string
so a value of \f[C]dev\f[R] would also match \f[C]clusterdevnode\f[R].
.TP
.B \f[C]-p\f[R] \f[I]VALUES\f[R], \f[C]--pool\f[R] \f[I]VALUES\f[R]
Specify the pool to query.
When multiple values are specified they must be separated by commas.
By default this does a wildcard match at the start and end of the string
so a value of \f[C]prod\f[R] would also match \f[C]preprod01\f[R].
.TP
.B \f[C]-r\f[R] \f[I]VALUES\f[R], \f[C]--role\f[R] \f[I]VALUES\f[R]
Specify the primary role to query.
When multiple values are specified they must be separated by commas.
By default this does a wildcard match at the start and end of the string
so a value of \f[C]MYSQL\f[R] would also match \f[C]MYSQL-DEV\f[R].
.TP
.B \f[C]-R\f[R] \f[I]VALUES\f[R], \f[C]--secondary-role\f[R] \f[I]VALUES\f[R]
Specify the secondary role to query.
When multiple values are specified they must be separated by commas.
By default this does a wildcard match at the start and end of the string
so a value of \f[C]MASTER\f[R] would also match \f[C]MESOS-MASTER\f[R].
.TP
.B \f[C]-i\f[R] \f[I]VALUES\f[R], \f[C]--ip-address\f[R] \f[I]VALUES\f[R]
Specify the ip address to query.
When multiple values are specified they must be separated by commas.
This does not do wildcard matching.
.TP
.B \f[C]-S\f[R] \f[I]VALUE\f[R], \f[C]--status\f[R] \f[I]VALUE\f[R]
Query only for assets that are in a given state.
Status takes a argument in the form of status:state.
An example would be \f[C]Allocated:Running\f[R].
State is however not required and you can just query for
\f[C]Allocated\f[R] as well.
.TP
.B \f[C]-a\f[R] \f[I]VALUE\f[R], \f[C]--attribute\f[R] \f[I]VALUE\f[R]
This is the bread and butter you can query for any key value pair you
want using this flag.
It can be specified multiple times and looks like \f[C]key:value\f[R].
.TP
.B \f[C]-o\f[R] \f[I]VALUE\f[R], \f[C]--operation\f[R] \f[I]VALUE\f[R]
Specify operation to join all flags with.
By default AND is used.
\f[I]VALUE\f[R] can be:
.RS
.IP \[bu] 2
\f[C]AND\f[R]
.IP \[bu] 2
\f[C]OR\f[R]
.RE
.TP
.B \f[C]-s\f[R] \f[I]VALUE\f[R], \f[C]--size\f[R] \f[I]VALUE\f[R]
Set the number of results to query for at once.
This is by default set to be 100.
If you are running this from some place where network latency is a huge
issue this may be useful to increase.
.TP
.B \f[C]--limit\f[R] \f[I]VALUE\f[R]
Limit the total number of assets that will be returned for the query.
By default everything will be returned.
.TP
.B \f[C]-q\f[R] \f[I]VALUE\f[R], \f[C]--query\f[R] \f[I]VALUE\f[R]
Specify your own CQL query.
Read the tumblr/collins docs for more info on CQL or see the source code
for examples of how we turn flags into CQL.
The following flags can be used with \f[C]--query\f[R].
.RS
.IP \[bu] 2
\f[C]--type\f[R]
.IP \[bu] 2
\f[C]--status\f[R]
.IP \[bu] 2
\f[C]--remote-lookup\f[R]
.RE
.SS Format options
.TP
.B \f[C]-H\f[R], \f[C]--show-header\f[R]
If you are rendering output in table format show the header above each
column.
.TP
.B \f[C]-c\f[R], \f[I]VALUES\f[R], \f[C]--columns\f[R] \f[I]VALUES\f[R]
Specify a list of all of the attributes that should be shown for table
formatting.
By default we first check if the value is a custom one that we know
about and need to compute such as total number of CPUs.
If it\[cq]s not a special column we check if it\[cq]s in attributes when
outputting it.
The following special values are available.
.RS
.PP
By default tag, hostname, nodeclass, status, pool, primary_role, and
seconadary_role are returned.
.IP \[bu] 2
tag
.IP \[bu] 2
status
.IP \[bu] 2
state
.IP \[bu] 2
classification
.IP \[bu] 2
ip_address
.IP \[bu] 2
ipmi_address
.IP \[bu] 2
cpu_cores
.IP \[bu] 2
cpu_threads
.IP \[bu] 2
cpu_speed_ghz
.IP \[bu] 2
cpu_description
.IP \[bu] 2
gpu_description
.IP \[bu] 2
cpu_product
.IP \[bu] 2
gpu_product
.IP \[bu] 2
cpu_vendor
.IP \[bu] 2
gpu_vendor
.IP \[bu] 2
memory_size_bytes
.IP \[bu] 2
memory_size_total
.IP \[bu] 2
memory_description
.IP \[bu] 2
memory_banks_total
.RE
.TP
.B \f[C]-x\f[R], \f[I]VALUES\f[R], \f[C]--extra-columns\f[R] \f[I]VALUES\f[R]
Instead of overwritting the default output columns with \f[C]-c\f[R] you
can append to them using \f[C]-x\f[R].
The same documentaion applies to this.
.TP
.B \f[C]-f\f[R] \f[I]VALUE\f[R], \f[C]--field-separator\f[R] \f[I]VALUE\f[R]
This sets the delimiter that all columns are seperated by.
By default all columns are seperated with a tab.
.SS Robot options
.TP
.B \f[C]-l\f[R], \f[C]--link\f[R]
Output the assets with a link to them in the web UI.
.TP
.B \f[C]-j\f[R], \f[C]--json\f[R]
Output the assets as a JSON array.
.TP
.B \f[C]-y\f[R], \f[C]--yaml\f[R]
Output the assets as a YAML array.
.SH AUTHORS
Michael Schuett.
